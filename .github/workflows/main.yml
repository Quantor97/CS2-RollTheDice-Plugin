name: .NET CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [created]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '7.0.x' # Aktualisiert auf .NET 7

    - name: Extract Module Info from CS file
      id: module_info
      run: |
        CS_FILE=$(find . -name '*.cs' -print -quit)
        MODULE_NAME_RAW=$(grep -oP '(?<=public override string ModuleName => ").*(?=";)' "$CS_FILE")
        MODULE_NAME="${MODULE_NAME_RAW// /}" # Remove all spaces from the module name
        MODULE_VERSION=$(grep -oP '(?<=public override string ModuleVersion => ").*(?=";)' "$CS_FILE")
        MODULE_VERSION="${MODULE_VERSION// /}" # Remove all spaces from the module version
        echo "Module Name: $MODULE_NAME"
        echo "Module Version: $MODULE_VERSION"
        echo "::set-output name=module_name::$MODULE_NAME"
        echo "::set-output name=module_version::$MODULE_VERSION"

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --output ./build

    - name: Test
      run: dotnet test --no-build --configuration Release --verbosity normal

    - name: Publish
      run: dotnet publish --configuration Release --output ./publish

    - name: Create DLL with version and path
      run: |
        mkdir -p "./addons/counterstrikesharp/plugins/${{ steps.module_info.outputs.module_name }}"
        cp "./publish/${{ steps.module_info.outputs.module_name }}.dll" "./addons/counterstrikesharp/plugins/${{ steps.module_info.outputs.module_name }}/${{ steps.module_info.outputs.module_name }}-${{ steps.module_info.outputs.module_version }}.dll"
      
    - name: Upload DLL
      uses: actions/upload-artifact@v2
      with:
        name: ${{ steps.module_info.outputs.module_name }}-${{ steps.module_info.outputs.module_version }}.dll
        path: ./addons/counterstrikesharp/plugins/${{ steps.module_info.outputs.module_name }}/${{ steps.module_info.outputs.module_name }}-${{ steps.module_info.outputs.module_version }}.dll

